services:
  api-server:
    container_name: 'api-server'
    build: 
      context: .
      dockerfile: ./docker/Dockerfile.api
    ports:
      - 8000:8000
    env_file:
      - /home/shared/.env
    entrypoint: ["sh", "-c", "poetry run python3 interactive/manage.py makemigrations && poetry run python3 interactive/manage.py migrate && poetry run python3 interactive/manage.py collectstatic --noinput && poetry run python3 interactive/manage.py runserver_plus --cert-file /certificates/acom.ucar.edu.crt --key-file /certificates/acom.ucar.edu.key 0.0.0.0:8000"]
    volumes:
      - /etc/pki/:/certificates
      # - partmc-data:/music-box-interactive/interactive/partmc-volume
    network_mode: "host"
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "10m"    # Maximum size of each log file, e.g., 10 megabytes
        max-file: "5"      # Maximum number of log files to retain
  model-runner:
    build: 
      context: .
      dockerfile: ./docker/Dockerfile.model_runner
    env_file:
      - /home/shared/.env
    restart: on-failure
    deploy:
      mode: replicated
      replicas: 6
    network_mode: "host"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"    # Maximum size of each log file, e.g., 10 megabytes
        max-file: "5"      # Maximum number of log files to retain
  postgres:
    container_name: 'postgres'
    network_mode: "host"
    build: 
      context: .
      dockerfile: ./docker/Dockerfile.postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
volumes:
  # partmc-data:
  postgres-data:
